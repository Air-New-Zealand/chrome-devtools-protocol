version: 2
jobs:
  test:
    docker:
    - image: circleci/php:7.1-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    #- restore_cache:
    #    keys:
    #    - v2_composer_vendor_{{ checksum "~/project/composer.json" }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    #- save_cache:
    #    key: v2_composer_vendor_{{ checksum "~/project/composer.json" }}
    #    paths:
    #    - ~/project/vendor
    - save_cache:
        key: v2_composer_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e test
    - store_test_results:
        path: /tmp/phpunit
  test_lowest:
    docker:
    - image: circleci/php:7.1-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_lowest_{{ .Branch }}
    #- restore_cache:
    #    keys:
    #    - v2_composer_vendor_lowest_{{ checksum "~/project/composer.json" }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative --prefer-lowest
    #- save_cache:
    #    key: v2_composer_vendor_lowest_{{ checksum "~/project/composer.json" }}
    #    paths:
    #    - ~/project/vendor
    - save_cache:
        key: v2_composer_lowest_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e test
    - store_test_results:
        path: /tmp/phpunit
  check_protocol:
    docker:
    - image: circleci/php:7.1-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    - run:
        command: |
          make download-protocol check-protocol
  docker_image:
    docker:
    - image: circleci/php:7.1-node-browsers
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          make docker-image
workflows:
  version: 2
  test:
    jobs:
    - test
    - test_lowest
    - check_protocol
  nightly:
    triggers:
    - schedule:
        cron: "0 3 * * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - check_protocol
    - docker_image
