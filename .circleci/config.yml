version: 2
jobs:

  test_7_2:
    docker:
    - image: circleci/php:7.2-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    - save_cache:
        key: v2_composer_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e test
    - store_test_results:
        path: /tmp/phpunit

  test_7_2_lowest:
    docker:
    - image: circleci/php:7.2-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_lowest_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative --prefer-lowest
    - save_cache:
        key: v2_composer_lowest_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e lint phpunit
    - store_test_results:
        path: /tmp/phpunit

  test_7_3:
    docker:
    - image: circleci/php:7.3-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    - save_cache:
        key: v2_composer_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e test
    - store_test_results:
        path: /tmp/phpunit

  test_7_3_lowest:
    docker:
    - image: circleci/php:7.3-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_lowest_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative --prefer-lowest
    - save_cache:
        key: v2_composer_lowest_{{ .Branch }}
        paths:
        - ~/.composer/cache
    - run:
        command: |
          mkdir -p /tmp/phpunit
          PHPUNIT_FLAGS="--log-junit /tmp/phpunit/junit.xml" make -e lint phpunit
    - store_test_results:
        path: /tmp/phpunit

  check_protocol:
    docker:
    - image: circleci/php:7.3-node-browsers
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    - run:
        command: |
          make download-protocol check-protocol

  autoupdate_protocol:
    docker:
    - image: circleci/php:7.3-node-browsers
    steps:
    - checkout
    - add_ssh_keys
    - restore_cache:
        keys:
        - v2_composer_{{ .Branch }}
    - run:
        command: |
          composer update --prefer-dist --no-progress --classmap-authoritative
    - run:
        command: |
          set -ex
          git config --global user.name "Jakub Kulhan"
          git config --global user.email "jakub.kulhan+circleci@gmail.com"
          git checkout $CIRCLE_BRANCH
          make download-protocol fix-protocol regenerate
          git add protocol.json protocol.json.md5 gen-src
          if git diff --cached --exit-code; then
            echo "Nothing to commit."
          else
            git commit -m "autoupdated protocol.json & generated files"
            git push origin $CIRCLE_BRANCH
          fi

  docker_image:
    docker:
    - image: circleci/php:7.3-node-browsers
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          make docker-image

workflows:
  version: 2

  test:
    jobs:
    - test_7_2
    - test_7_2_lowest
    - test_7_3
    - test_7_3_lowest
    - check_protocol

  nightly:
    triggers:
    - schedule:
        cron: "0 3 * * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - autoupdate_protocol
    - docker_image
